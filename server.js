const WebSocket = require('ws');

const wss = new WebSocket.Server({ port: 3000 });
let waitingUser = null;

wss.on('connection', (ws) => {
    console.log('‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è');

    ws.isAlive = true;
    ws.on('pong', () => ws.isAlive = true);

    ws.on('close', () => {
        console.warn("‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è");
        if (ws.otherUser) {
            ws.otherUser.send(JSON.stringify({ message: '‚ö†Ô∏è –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–∫–ª—é—á–∏–ª—Å—è' }));
            ws.otherUser.otherUser = null;
        }
        if (waitingUser === ws) {
            waitingUser = null;
        }
    });

    ws.on('error', (error) => {
        console.error("‚ùå WebSocket –æ—à–∏–±–∫–∞:", error);
    });

    if (waitingUser) {
        ws.otherUser = waitingUser;
        waitingUser.otherUser = ws;
        waitingUser.send(JSON.stringify({ message: '‚úÖ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω' }));
        ws.send(JSON.stringify({ message: '‚úÖ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω' }));
        waitingUser = null;
    } else {
        waitingUser = ws;
        ws.send(JSON.stringify({ message: '‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...' }));

        // –ï—Å–ª–∏ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        setTimeout(() => {
            if (waitingUser === ws) {
                ws.send(JSON.stringify({ message: '‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.' }));
                waitingUser = null;
            }
        }, 30000);
    }

    ws.on('message', (message) => {
        console.log("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", message);
        
        if (ws.otherUser) {
            if (ws.otherUser.readyState === WebSocket.OPEN) {
                ws.otherUser.send(message);
            } else {
                console.warn("‚ö†Ô∏è –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–∫–ª—é—á–∏–ª—Å—è, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ");
                ws.send(JSON.stringify({ message: '‚ö†Ô∏è –í–∞—à —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –æ—Ç–∫–ª—é—á–∏–ª—Å—è.' }));
                ws.otherUser = null;
            }
        } else {
            console.warn("‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞");
            ws.send(JSON.stringify({ message: '‚ö†Ô∏è –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.' }));
        }
    });
});

// –ü–∏–Ω–≥ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–∞–∑—Ä—ã–≤–æ–≤
setInterval(() => {
    wss.clients.forEach((ws) => {
        if (!ws.isAlive) return ws.terminate();
        ws.isAlive = false;
        ws.ping();
    });
}, 30000);

console.log('üöÄ WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');

